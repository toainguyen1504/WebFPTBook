// <auto-generated />
using System;
using BookFPTStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookFPTStore.Migrations
{
    [DbContext(typeof(FptbookstoreContext))]
    partial class FptbookstoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookFPTStore.Models.TbAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__tb_Autho__3213E83F22229D0B");

                    b.ToTable("tb_Author", (string)null);
                });

            modelBuilder.Entity("BookFPTStore.Models.TbBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("authorId");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("description");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("detail");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("image");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("price");

                    b.Property<decimal?>("PriceSale")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("priceSale");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__tb_Book__3213E83F54F2248B");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("tb_Book", (string)null);
                });

            modelBuilder.Entity("BookFPTStore.Models.TbCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("address");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("customerName");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("totalAmount");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__tb_Cart__3213E83F2983534D");

                    b.HasIndex("UserId");

                    b.ToTable("tb_Cart", (string)null);
                });

            modelBuilder.Entity("BookFPTStore.Models.TbCartDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("bookId");

                    b.Property<int?>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("cartId");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__tb_CartD__3213E83F9E05FBF8");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("tb_CartDetail", (string)null);
                });

            modelBuilder.Entity("BookFPTStore.Models.TbCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__tb_Categ__3213E83F480BC412");

                    b.HasIndex(new[] { "Title" }, "UQ__tb_Categ__E52A1BB340AE81DE")
                        .IsUnique();

                    b.ToTable("tb_Category", (string)null);
                });

            modelBuilder.Entity("BookFPTStore.Models.TbUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("fullName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("phone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__tb_User__3213E83F3E5B3C62");

                    b.ToTable("tb_User", (string)null);
                });

            modelBuilder.Entity("BookFPTStore.Models.TbBook", b =>
                {
                    b.HasOne("BookFPTStore.Models.TbAuthor", "Author")
                        .WithMany("TbBooks")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK_authorId");

                    b.HasOne("BookFPTStore.Models.TbCategory", "Category")
                        .WithMany("TbBooks")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_categoryId");

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BookFPTStore.Models.TbCart", b =>
                {
                    b.HasOne("BookFPTStore.Models.TbUser", "User")
                        .WithMany("TbCarts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_userId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookFPTStore.Models.TbCartDetail", b =>
                {
                    b.HasOne("BookFPTStore.Models.TbBook", "Book")
                        .WithMany("TbCartDetails")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK_bookId");

                    b.HasOne("BookFPTStore.Models.TbCart", "Cart")
                        .WithMany("TbCartDetails")
                        .HasForeignKey("CartId")
                        .HasConstraintName("FK_cartId");

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("BookFPTStore.Models.TbAuthor", b =>
                {
                    b.Navigation("TbBooks");
                });

            modelBuilder.Entity("BookFPTStore.Models.TbBook", b =>
                {
                    b.Navigation("TbCartDetails");
                });

            modelBuilder.Entity("BookFPTStore.Models.TbCart", b =>
                {
                    b.Navigation("TbCartDetails");
                });

            modelBuilder.Entity("BookFPTStore.Models.TbCategory", b =>
                {
                    b.Navigation("TbBooks");
                });

            modelBuilder.Entity("BookFPTStore.Models.TbUser", b =>
                {
                    b.Navigation("TbCarts");
                });
#pragma warning restore 612, 618
        }
    }
}
